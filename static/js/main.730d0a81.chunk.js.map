{"version":3,"sources":["components/Nav/Nav.module.css","components/Login/login.module.css","pseudoRedux/newsPage-reducer.js","components/Sidebar/Sidebar.module.css","components/Messages/Dialogs/Dialogs.module.css","common/Pagination.module.css","assets/img/loading.svg","api/api.js","components/Users/Users.module.css","serviceWorker.js","components/Nav/Nav.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Sidebar/Friend/Friend_sidebar.jsx","components/Sidebar/Sidebar.jsx","components/Messages/Dialogs/Dialogs.jsx","components/Messages/Messages.jsx","pseudoRedux/messagesPage-reducer.js","components/Messages/MessagesContainer.jsx","pseudoRedux/users-reducer.js","common/Pagination.js","components/Users/Users.jsx","pseudoRedux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","pseudoRedux/Auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","pseudoRedux/app_reducer.js","pseudoRedux/sideBar-reducer.js","redux/redux-store.js","App.js","index.js","utils/validators/formValidator.js","common/Preloader.js","components/Header/Header.module.css","components/Messages/Contacts/Contacts.module.css","common/FormControls.js","components/Messages/Messages.module.css","common/FormControls.module.css","HOC/withAuthRedirect.jsx","components/Sidebar/Friend/Friend_sidebar.module.css","pseudoRedux/profilePage-reducer.js","components/Messages/Contacts/Contacts.jsx","assets/img/avatar_default.jpg"],"names":["module","exports","initialState","news","id","text","addNewsText","updateTextCont","type","addNewsCont","newsPage_reducer","state","action","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getProfileStatus","updateProfileStatus","status","put","updateProfileAvatar","img","formData","FormData","append","saveProfileChanges","profile","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Nav","className","styles","site_nav","item","to","link","activeClassName","activeLink","Music","props","Settings","Friend_sidebar","friend_wrapper","src","ava","fname","Sidebar","friendsElements","friendsData","map","friend","name","key","sidebar","maxLength150","maxLengthCreator","ValidatedTextarea","ValidatedElemCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","requiredField","placeholder","Dialogs","dialog","Messages","contactsElement","contactsData","contact","Contacts","dialogsElement","dialogsData","messages","contacts_wrapper","dialogs_wrapper","addMessage","messagesPage_reducer","message","addMessageText","compose","withAuthRedirect","connect","messagesPage","usersData","pagesData","totalUsersCount","isLoading","isDisabled","fake","users_reducer","user","followed","users","totalCount","condition","filter","isLoadingToogle","disableToggle","Pagination","pagesCount","onPageChanged","pagesNumb","i","push","j","page","current_page","toString","onClick","Users","users_wrapper","user_wrapper","user_status","photos","small","userPhoto","btn","disabled","some","user_info","getUsersDataSuperSelector","createSelector","usersPage","getPageSize","getCurrentPage","getPagesCount","Math","ceil","getIsLoading","getIsDisabled","UsersInnerContainer","setCurrentPage","this","Preloader","React","Component","dispatch","resultCode","followAC","unfollowAC","items","withRouter","Header","header","auth_block","isLogged","auth_info","logout_btn","auth_link","setAuthorizedUser","getAuthProfile","auth_reducer","HeaderInnerContainer","auth","HeaderContainer","ValidatedInput","LoginReduxForm","error","formErr","errAction","stopSubmit","_error","initialized","app_reducer","sideBar_reducer","reducers","combineReducers","newsPage","profilePage","profilePage_reducer","sidebarPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","__store__","ProfileContainer","loadable","NewsContainer","App","initializingApp","getState","path","render","MessagesContainer","UsersContainer","AppContainer","promise","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","value","undefined","maxLength","length","preloader","Element","input","meta","hasError","touched","postWrapper","fieldErr","errorMessage","createReduxFormField","validators","mapStateToPropsToRedirect","myPostsData","likeCount","addNewPost","setProfileStatusAC","getUserProfile","setProfileAvatar","a","reject","newPostText","postId","contact_info","avatar","nameLink","active_contact"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,SAAW,sBAAsB,KAAO,kBAAkB,KAAO,kBAAkB,WAAa,0B,oBCAlHD,EAAOC,QAAU,CAAC,QAAU,yB,wHCDxBC,EAAe,CACXC,KAAM,CACF,CAACC,GAAG,EAAIC,KAAM,0BAElBC,YAAa,sBA6BRC,EAAiB,SAACF,GAAD,MAAW,CAAEG,KAAK,iBAAkBH,KAAMA,IAC3DI,EAAc,iBAAO,CAACD,KAAM,eAE1BE,IA7BU,WAAmC,IAAlCC,EAAiC,uDAAzBT,EAAcU,EAAW,uCAEvD,OAAOA,EAAOJ,MACV,IAAK,aACD,IAAIL,EAAO,CACPC,GAAI,EACJC,KAAMM,EAAML,aAGhB,OAAO,2BACAK,GADP,IAEIR,KAAK,GAAD,mBAAMQ,EAAMR,MAAZ,CAAiBA,IACrBG,YAAa,KAGrB,IAAK,iBAED,OAAO,2BAAIK,GAAX,IACAL,YAAaM,EAAOP,OAExB,QACI,OAAOM,K,oBC3BnBX,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,0B,oBCA9DD,EAAOC,QAAU,CAAC,aAAe,mC,oBCDjCD,EAAOC,QAAU,IAA0B,qC,gCCA3C,mHAEMY,EAAWC,SAAa,CAC1BC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CACL,UAAW,0CAKNC,EAAW,CAEpBC,SAFoB,WAEqB,IAAhCC,EAA+B,uDAAjB,EAAEC,EAAe,uDAAJ,GAChC,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SAGpCC,OAPoB,SAObC,GACH,OAAOd,EAASe,KAAT,iBAAwBD,IAC1BJ,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SAGpCI,SAZoB,SAYXF,GACL,OAAOd,EAASiB,OAAT,iBAA0BH,IAC5BJ,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SAGpCM,WAjBoB,SAiBTJ,GAEP,OADAK,QAAQC,KAAK,4DACNC,EAAWH,WAAWJ,KAMxBO,EAAa,CAEtBH,WAFsB,SAEXJ,GACP,OAAOd,EAASS,IAAT,kBAAwBK,KAGnCQ,iBANsB,SAMLR,GACb,OAAOd,EAASS,IAAT,yBAA+BK,KAG1CS,oBAVsB,SAUFC,GAChB,OAAOxB,EAASyB,IAAI,iBAAiB,CACjCD,OAAQA,KAIhBE,oBAhBsB,SAgBFC,GAChB,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,QAASH,GAClB3B,EAASyB,IAAI,iBAAiBG,EAAU,CAC3CxB,QAAS,CACL,eAAgB,0BAK5B2B,mBA1BsB,SA0BHC,GACf,OAAOhC,EAASyB,IAAI,WAAYO,KAM3BC,EAAU,CAEnBC,GAFmB,WAGf,OAAOlC,EAASS,IAAI,YAGxB0B,MANmB,SAMZC,EAAOC,GAA+B,IAArBC,EAAoB,wDAC1C,OAAOtC,EAASe,KAAK,aAAe,CAAEqB,QAAOC,WAAUC,gBAGzDC,OAVmB,WAWf,OAAOvC,EAASiB,OAAO,iB,iJC/E/B9B,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,aAAe,4BAA4B,YAAc,2BAA2B,UAAY,yBAAyB,IAAM,mBAAmB,IAAM,qB,+CCWnMoD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uGCYSC,EA1BH,WACR,OACI,yBAAKC,UAAWC,IAAOC,UACnB,yBAAKF,UAAWC,IAAOE,MACnB,kBAAC,IAAD,CAASC,GAAG,WAAWJ,UAAWC,IAAOI,KAAMC,gBAAiBL,IAAOM,YAAvE,YAEJ,yBAAKP,UAAWC,IAAOE,MACnB,kBAAC,IAAD,CAASC,GAAG,SAASJ,UAAWC,IAAOI,KAAMC,gBAAiBL,IAAOM,YAArE,UAEJ,yBAAKP,UAAWC,IAAOE,MACnB,kBAAC,IAAD,CAASC,GAAG,YAAYJ,UAAWC,IAAOI,KAAMC,gBAAiBL,IAAOM,YAAxE,aAEJ,yBAAKP,UAAWC,IAAOE,MACnB,kBAAC,IAAD,CAASC,GAAG,OAAOJ,UAAWC,IAAOI,KAAMC,gBAAiBL,IAAOM,YAAnE,SAEJ,yBAAKP,UAAWC,IAAOE,MACnB,kBAAC,IAAD,CAASC,GAAG,QAAQJ,UAAWC,IAAOI,KAAMC,gBAAiBL,IAAOM,YAApE,UAEJ,yBAAKP,UAAWC,IAAOE,MACnB,kBAAC,IAAD,CAASC,GAAG,WAAWJ,UAAWC,IAAOI,KAAMC,gBAAiBL,IAAOM,YAAvE,eCXDC,G,OATD,SAAEC,GAEZ,OACI,6BACI,wCCKGC,G,OARE,SAAED,GACf,OACI,2C,mCCMOE,EATQ,SAACF,GACpB,OACI,yBAAKT,UAAWC,IAAOW,gBACnB,yBAAKC,IAAI,iEAAiEb,UAAWC,IAAOa,MAC5F,6BAAML,EAAMM,SCQTC,EAXC,SAACP,GACb,IAAIQ,EAAkBR,EAAMzD,MAAMkE,YAAYC,KAAK,SAAAC,GAC/C,OAAO,kBAAC,EAAD,CAAgBL,MAAOK,EAAOC,KAAOC,IAAKF,EAAO3E,QAE5D,OACI,yBAAKuD,UAAWC,IAAOsB,SAClBN,I,2ECJTO,EAAeC,YAAiB,KAC9BC,EAAoBC,YAAqB,YAYlCC,EAAsBC,YAAU,CAACC,KAAM,kBAAjBD,EAVZ,SAACpB,GACpB,OACI,0BAAMsB,SAAUtB,EAAMuB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWR,EAAmBL,KAAK,iBACnCc,SAAU,CAACC,IAAcZ,GAAea,YAAY,sBAC3D,oDAeGC,EARC,SAAC7B,GACb,OACI,yBAAKT,UAAWC,IAAOsC,QACnB,6BAAM9B,EAAM/D,Q,QCUT8F,EA5BE,SAAC/B,GAEd,IAAIgC,EAAkBhC,EAAMiC,aAAavB,KAAK,SAAAwB,GAE1C,OACI,kBAACC,EAAA,EAAD,CAAUvB,KAAMsB,EAAQtB,KAAMC,IAAKqB,EAAQlG,GAAIA,GAAIkG,EAAQlG,QAI/DoG,EAAiBpC,EAAMqC,YAAY3B,KAAK,SAAAoB,GACxC,OACI,kBAAC,EAAD,CAAS7F,KAAM6F,EAAO7F,KAAM4E,IAAKiB,EAAO9F,QAIhD,OACI,yBAAKuD,UAAWC,IAAO8C,UACnB,yBAAK/C,UAAWC,IAAO+C,kBAClBP,GAEL,yBAAKzC,UAAWC,IAAOgD,iBAClBJ,GAEL,kBAACjB,EAAD,CAAqBG,SAAUtB,EAAMyC,e,eC7B7C3G,EAAe,CACXmG,aAAc,CACV,CAAEjG,GAAG,EAAG4E,KAAM,UACd,CAAE5E,GAAG,EAAG4E,KAAM,SACd,CAAE5E,GAAG,EAAG4E,KAAM,UACd,CAAE5E,GAAG,EAAG4E,KAAM,UACd,CAAE5E,GAAG,EAAG4E,KAAM,UAElByB,YAAa,CACT,CAACrG,GAAG,EAAGC,KAAK,QACZ,CAACD,GAAG,EAAGC,KAAK,+BACZ,CAACD,GAAG,EAAGC,KAAK,wCA6BTyG,EAvBc,WAAmC,IAAlCnG,EAAiC,uDAAzBT,EAAcU,EAAW,uCAE3D,OAAQA,EAAOJ,MAEX,IAAK,kBACD,IAAIuG,EAAU,CACV3G,GAAI,EACJC,KAAMO,EAAOa,KAAKuF,gBAGrB,OAAO,2BACArG,GADP,IAEI8F,YAAY,GAAD,mBAAM9F,EAAM8F,aAAZ,CAAwBM,MAI5C,QACI,OAAOpG,I,uBClBJsG,cACXC,IACAC,aAVkB,SAACxG,GAEnB,MAAO,CACH0F,aAAc1F,EAAMyG,aAAaf,aACjCI,YAAa9F,EAAMyG,aAAaX,eAMZ,CAACI,WDoBH,SAACpF,GAAD,MAAW,CAACjB,KAAM,kBAAmBiB,WCtBhDwF,CAIdd,G,gBClBGjG,EAAe,CACfmH,UAAY,GACZC,UAAW,CACPjG,SAAU,EACVkG,gBAAiB,EACjBnG,YAAa,GAEjBoG,WAAW,EACXC,WAAY,GACZC,KAAM,GA6EKC,EAzEO,WAAmC,IAAlChH,EAAiC,uDAAzBT,EAAcU,EAAW,uCAEpD,OAAQA,EAAOJ,MACX,IAAK,OAAQ,OAAO,2BAAIG,GAAX,IAAkB+G,KAAM/G,EAAM+G,KAAO,IAClD,IAAK,SACD,OAAO,2BACA/G,GADP,IAEI0G,UAAW1G,EAAM0G,UAAUvC,KAAK,SAAA8C,GAC5B,OAAIA,EAAKxH,KAAOQ,EAAOe,OACZ,2BACAiG,GADP,IAEIC,UAAU,IAGXD,OAGnB,IAAK,WACD,OAAO,2BACAjH,GADP,IAEI0G,UAAW1G,EAAM0G,UAAUvC,KAAK,SAAA8C,GAC5B,OAAKA,EAAKxH,KAAOQ,EAAOe,OACb,2BACAiG,GADP,IAEIC,UAAU,IAGXD,OAInB,IAAK,WACD,OAAO,2BACAjH,GADP,IAEI0G,UAAU,YAAKzG,EAAOkH,SAI9B,IAAK,iBACD,OAAO,2BACAnH,GADP,IAEI2G,UAAU,2BACH3G,EAAM2G,WADJ,IAELlG,YAAaR,EAAOQ,gBAGhC,IAAK,qBACD,OAAO,2BACAT,GADP,IAEI2G,UAAU,2BAAK3G,EAAM2G,WAAZ,IACLC,gBAAiB3G,EAAOmH,eAIpC,IAAK,YACD,OAAO,2BACApH,GADP,IAEI6G,UAAW5G,EAAO4G,YAG1B,IAAK,gBACD,OAAO,2BACA7G,GADP,IAEI8G,WAAY7G,EAAOoH,UAAP,sBACFrH,EAAM8G,YADJ,CACe7G,EAAOe,SAC5BhB,EAAM8G,WAAWQ,QAAQ,SAAA7H,GAAE,OAAIA,GAAMQ,EAAOe,YAG1D,QACI,OAAOhB,IAWNuH,EAAkB,SAACV,GAAD,MAAgB,CAAChH,KAAK,YAAagH,cACrDW,EAAgB,SAACH,EAAWrG,GAAZ,MAAwB,CAACnB,KAAM,gBAAiBwH,YAAWrG,W,0DCxEzEyG,GArBI,SAAC,GAGhB,IAH4D,IAA3CC,EAA0C,EAA1CA,WAAWjH,EAA+B,EAA/BA,YAAYkH,EAAmB,EAAnBA,cAEpCC,EAAY,GACNC,EAAI,EAAGA,GAAI,EAAGA,IACpBD,EAAUE,KAAKD,GAGnB,IAAM,IAAIE,EAAKL,EAAa,EAAGK,GAAKL,EAAYK,IAC5CH,EAAUE,KAAKC,GAGnB,OACI,6BACCH,EAAUzD,KAAK,SAAC6D,EAAMvI,GACnB,OAAO,0BAAMuD,WAAYvC,IAAgBuH,GAAQ/E,KAAOgF,cAAcC,WAAY5D,IAAK7E,EAC1E0I,QAAU,WAAOR,EAAcK,KADrC,IAC+CA,EAD/C,UC4BJI,GAvCD,SAAC3E,GAEb,OACU,yBAAKT,UAAWC,IAAOoF,eAEnB,kBAAC,GAAD,CAAY5H,YAAagD,EAAMhD,YAAakH,cAAelE,EAAMkE,cACrDD,WAAYjE,EAAMiE,aAG1BjE,EAAMiD,UAAUvC,KAAI,SAAA8C,GAAI,OACxB,yBAAK3C,IAAK2C,EAAKxH,GAAIuD,UAAWC,IAAOqF,cACjC,yBAAKtF,UAAWC,IAAOsF,aACnB,kBAAC,IAAD,CAASnF,GAAE,mBAAc6D,EAAKxH,KACxBwH,EAAKuB,OAAOC,MAAS,yBAAK5E,IAAKoD,EAAKuB,OAAOC,MAAOzF,UAAWC,IAAOa,MACpE,yBAAKD,IAAK6E,KAAW1F,UAAWC,IAAOa,OAE3CmD,EAAKC,SACD,4BAAQlE,UAAWC,IAAO0F,IAAKC,SAAUnF,EAAMqD,WAAW+B,MAAM,SAAApJ,GAAE,OAAIA,IAAOwH,EAAKxH,MAAK0I,QAAS,WAC9F1E,EAAMvC,SAAS+F,EAAKxH,MADtB,YAIA,4BAAQuD,UAAWC,IAAO0F,IAAKC,SAAUnF,EAAMqD,WAAW+B,MAAK,SAAApJ,GAAE,OAAIA,IAAOwH,EAAKxH,MAAK0I,QAAS,WAC7F1E,EAAM1C,OAAOkG,EAAKxH,MADpB,WAKV,yBAAKuD,UAAWC,IAAO6F,WACnB,6BACI,6BAAM7B,EAAK5C,MACX,6BAAM4C,EAAKvF,SAEf,6BAAM,wB,mBC/BrBqH,GAA4BC,cAFL,SAAAhJ,GAAK,OAAIA,EAAMiJ,UAAUvC,aAEiB,SAACS,GAC3E,OAAOA,EAAMG,QAAO,SAAAL,GAAI,OAAI,QAInBiC,GAAc,SAAAlJ,GAAK,OAAKA,EAAMiJ,UAAUtC,UAAUjG,UAClDyI,GAAiB,SAAAnJ,GAAK,OAAKA,EAAMiJ,UAAUtC,UAAUlG,aACrD2I,GAAgB,SAAApJ,GACzB,OAAOqJ,KAAKC,KAAKtJ,EAAMiJ,UAAUtC,UAAUC,gBAAkB5G,EAAMiJ,UAAUtC,UAAUjG,WAC9E6I,GAAe,SAAAvJ,GAAK,OAAIA,EAAMiJ,UAAUpC,WACxC2C,GAAgB,SAAAxJ,GAAK,OAAIA,EAAMiJ,UAAUnC,YCKhD2C,G,4MAMF9B,cAAgB,SAACK,GACb,EAAKvE,MAAMiG,eAAe1B,GAC1B,EAAKvE,MAAMjD,SAASwH,EAAM,EAAKvE,MAAM/C,W,kEALrCiJ,KAAKlG,MAAMjD,SAASmJ,KAAKlG,MAAMhD,YAAakJ,KAAKlG,MAAM/C,Y,+BAUvD,OACI,oCACKiJ,KAAKlG,MAAMoD,WAAa,kBAAC+C,GAAA,EAAD,MACzB,kBAAC,GAAD,CAAOlD,UAAWiD,KAAKlG,MAAMiD,UAAWhG,SAAUiJ,KAAKlG,MAAM/C,SACtDD,YAAakJ,KAAKlG,MAAMhD,YAAaiH,WAAYiC,KAAKlG,MAAMiE,WAC5DC,cAAegC,KAAKhC,cACpB5G,OAAQ4I,KAAKlG,MAAM1C,OACnBG,SAAUyI,KAAKlG,MAAMvC,SAAU4F,WAAY6C,KAAKlG,MAAMqD,WACtDU,cAAemC,KAAKlG,MAAM+D,qB,GArBfqC,IAAMC,WAwCzBxD,eACXE,aAbkB,SAACxG,GAEnB,MAAO,CACH0G,UAAWqC,GAA0B/I,GACrCU,SAAUwI,GAAYlJ,GACtBS,YAAa0I,GAAenJ,GAC5B0H,WAAY0B,GAAcpJ,GAC1B6G,UAAW0C,GAAavJ,GACxB8G,WAAY0C,GAAcxJ,MAM1B,CAACe,OJ4Da,SAACC,GACnB,OAAO,SAAC+I,GACJA,EAASvC,GAAc,EAAMxG,IAC7BT,IAASQ,OAAOC,GACXJ,MAAM,SAAAE,GACHiJ,EAASvC,GAAc,EAAOxG,IACN,IAApBF,EAAKkJ,YACLD,EAxCH,SAAC/I,GAAD,MAAa,CAACnB,KAAK,SAAWmB,UAwClBiJ,CAASjJ,SInErBE,SJ+CO,SAACF,GACrB,OAAO,SAAC+I,GACJA,EAASvC,GAAc,EAAMxG,IAC7BT,IAASW,SAASF,GACbJ,MAAM,SAAAE,GACHiJ,EAASvC,GAAc,EAAOxG,IACN,IAApBF,EAAKkJ,YACLD,EA1BD,SAAC/I,GAAD,MAAa,CAACnB,KAAK,WAAYmB,UA0BrBkJ,CAAWlJ,SItDdR,SJmCE,SAACC,EAAaC,GACtC,OAAO,SAACqJ,GACJA,EAASxC,GAAgB,IACzBhH,IAASC,SAASC,EAAaC,GAC1BE,MAAK,SAAAE,GACFiJ,EAASxC,GAAgB,IACzBwC,EAZe,CAAClK,KAAK,WAAYsH,MAYbrG,EAAKqJ,QACzBJ,EAXmC,CAAClK,KAAM,qBAAsBuH,WAWpCtG,EAAKsG,kBI1CCsC,eJ8BpB,SAACjJ,GAAD,MAAkB,CAACZ,KAAM,iBAAkBY,kBI7BrE2J,IAHW9D,CAMdmD,I,oBCxCcY,GAtBA,SAAC5G,GAEZ,OACI,4BAAQT,UAAYC,KAAOqH,QACvB,yBAAKzG,IAAI,mEACT,yBAAKb,UAAWC,KAAOsH,YAEjB9G,EAAM+G,SAKF,oCACE,yBAAKxH,UAAWC,KAAOwH,WAAYhH,EAAMpB,OACzC,4BAAQ8F,QAAS1E,EAAMhB,OAAQO,UAAWC,KAAOyH,YAAjD,WANF,oCACE,kBAAC,IAAD,CAAStH,GAAI,SAAUJ,UAAWC,KAAO0H,WAAzC,SACClH,EAAMoD,WAAa,kBAAC+C,GAAA,EAAD,U,SCZxCrK,GAAe,CACfE,GAAI,KACJ6C,MAAO,KACPD,MAAO,KACPmI,UAAU,EACV3D,WAAW,GAqBT+D,GAAoB,SAACnL,EAAI4C,EAAOC,EAAOkI,GAAnB,MAAiC,CACvD3K,KAAM,oBACNiB,KAAM,CAACrB,KAAI4C,QAAOC,QAAOkI,cAIhBK,GAAiB,kBAAM,SAACd,GAElC,OAAO5H,IAAQC,KACTxB,MAAK,SAACC,GACH,GAAiC,IAA7BA,EAASC,KAAKkJ,WAAkB,OAEPnJ,EAASC,KAAKA,KAAlCrB,EAF2B,EAE3BA,GAAI4C,EAFuB,EAEvBA,MAAOC,EAFgB,EAEhBA,MAChByH,EAASa,GAAkBnL,EAAI4C,EAAOC,GAAO,UA+B9CwI,GA9DI,WAAmC,IAAlC9K,EAAiC,uDAAzBT,GAAcU,EAAW,uCAEjD,OAAQA,EAAOJ,MACX,IAAK,oBACD,OAAO,2BACAG,GACAC,EAAOa,MAElB,IAAK,wBACD,OAAO,2BACAd,GADP,IAEI6G,UAAW5G,EAAO4G,YAE1B,QACI,OAAO7G,ICpBb+K,G,uKAIE,OACI,oCACI,kBAAC,GAAD,CAAQlE,UAAW8C,KAAKlG,MAAMuH,KAAKnE,UAC3B2D,SAAUb,KAAKlG,MAAMuH,KAAKR,SAC1BnI,MAAOsH,KAAKlG,MAAMuH,KAAK3I,MACvBI,OAAQkH,KAAKlG,MAAMhB,c,GATRoH,IAAMC,WAyB1BmB,GAFSzE,aARF,SAACxG,GAEnB,OAAO,eACAA,KAKsC,CAACyC,ODmC5B,kBAAM,SAACsH,GACzB5H,IAAQM,SACH7B,MAAK,SAAAC,GAC+B,IAA7BA,EAASC,KAAKkJ,YACdD,EAASa,GAAkB,KAAM,KAAM,MAAM,UCvCrCpE,CAAmCuE,I,qBCpBrDG,GAAiBvG,YAAqB,SAyBtCwG,GAAiBtG,YAAU,CAAEC,KAAM,SAAlBD,EAvBL,SAACpB,GAEf,OACI,0BAAMsB,SAAUtB,EAAMuB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOI,YAAa,QAAShB,KAAM,QAASa,UAAWgG,GACvD/F,SAAU,CAACC,KAAgBvF,KAAM,WAErC,6BACI,kBAACoF,EAAA,EAAD,CAAOI,YAAa,WAAYhB,KAAM,WAAYa,UAAWgG,GAC7DrL,KAAM,WAAYsF,SAAU,CAACC,QAEjC,6BACI,kBAACH,EAAA,EAAD,CAAOpF,KAAM,WAAYwE,KAAM,aAAca,UAAWgG,MAE3DzH,EAAM2H,OAAS,uBAAGpI,UAAWC,KAAOoI,SAAU5H,EAAM2H,OACrD,6BACI,gDAqBD5E,eAAQ,KAAK,CAACnE,MFAR,SAACC,EAAOC,EAAUC,GAAlB,OAAiC,SAACuH,GAEnD5H,IAAQE,MAAMC,EAAOC,EAAUC,GAC1B5B,MAAK,SAAAC,GAEE,GAAiC,IAA7BA,EAASC,KAAKkJ,WACdD,EAASc,UACN,CACH,IAAIS,EAAYC,aAAW,QAAS,CAACC,OAAQ3K,EAASC,KAAKiF,WAC3DgE,EAASuB,UETd9E,EAbD,SAAC/C,GAKX,OACI,oCACI,qCACA,kBAAC0H,GAAD,CAAgBpG,SAPP,SAACjD,GACd2B,EAAMpB,MAAMP,EAASQ,MAAOR,EAASS,SAAUT,EAASU,mBCnC5DjD,GAAe,CACfkM,aAAa,GA4BFC,GAzBG,WAAmC,IAAlC1L,EAAiC,uDAAzBT,GAAcU,EAAW,uCAEhD,OAAQA,EAAOJ,MACX,IAAK,qBACD,OAAO,2BACAG,GADP,IAEIyL,aAAa,IAGrB,QACI,OAAOzL,I,mBChBfT,GAAe,CACX2E,YAAa,CACT,CAACzE,GAAG,EAAG4E,KAAM,QACb,CAAC5E,GAAG,EAAG4E,KAAM,QACb,CAAC5E,GAAG,EAAG4E,KAAM,YAUVsH,GALS,WAAmC,IAAlC3L,EAAiC,uDAAzBT,GAC7B,OAAO,eAAIS,I,oBCCX4L,GAAWC,YAAgB,CAC3BpF,aAAcN,EACd2F,SAAU/L,KACVgM,YAAaC,KACbC,YAAaN,GACb1C,UAAWjC,EACXgE,KAAMF,GACNhG,KAAMoH,KACNC,IAAKT,KAIHU,GAAmBzJ,OAAO0J,sCAAwC/F,IAClEgG,GAAQC,YAAYX,GAAUQ,GAAiBI,YAAgBC,QAOrE9J,OAAO+J,UAAYJ,GAEJA,UCbTK,GAAmBC,aAAS,kBAAM,iCAClCC,GAAgBD,aAAS,kBAAM,iCAE/BE,G,kLAEKnD,KAAKlG,MAAMsJ,oB,+BAId,IAAKpD,KAAKlG,MAAMgI,YACZ,OAAO,kBAAC7B,GAAA,EAAD,CAAW5G,UAAU,oBAGhC,IAAIhD,EAAQ2J,KAAKlG,MAAM6I,MAAMU,WAE7B,OACI,yBAAKhK,UAAU,eACX,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAShD,MAAOA,EAAMiM,cACtB,yBAAKjJ,UAAU,wBAEX,kBAAE,IAAF,CAAQiK,KAAK,oBAAoBC,OAAQ,kBAAM,kBAACP,GAAD,SAC/C,kBAAE,IAAF,CAAQM,KAAK,YAAYC,OAAQ,kBAAM,kBAACC,EAAD,SACvC,kBAAE,IAAF,CAAQF,KAAK,QAAQC,OAAQ,kBAAM,kBAACL,GAAD,SACnC,kBAAE,IAAF,CAAQI,KAAK,SAASC,OAAQ1J,IAC9B,kBAAE,IAAF,CAAQyJ,KAAK,YAAYC,OAAQxJ,IACjC,kBAAE,IAAF,CAAQuJ,KAAK,SAASC,OAAQ,kBAAM,kBAACE,GAAD,SACpC,kBAAE,IAAF,CAAQH,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,e,GAzBtCrD,IAAMC,WAoCpBuD,GAAgB/G,YAChB8D,IACA5D,aANkB,SAACxG,GAAD,MAAY,CAC9ByL,YAAazL,EAAMmM,IAAIV,eAKC,CAACsB,gBHvCA,kBAAM,SAAChD,GAChC,IAAIuD,EAAUvD,EAASc,MAEvB0C,QAAQC,IAAI,CAACF,IACR1M,MAAK,WACFmJ,EAPoB,CAAClK,KAAM,8BGuCnByG,CAE4BwG,IAYjCW,GAVD,SAAChK,GACX,OACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAU6I,MAAOA,IACb,kBAACe,GAAD,CAAcf,MAAOA,QCzDjCoB,IAASR,OAEL,kBAAC,GAAD,MAEAS,SAASC,eAAe,SvBqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnN,MAAK,SAAAoN,GACJA,EAAaC,gBAEdC,OAAM,SAAA9C,GACL/J,QAAQ+J,MAAMA,EAAMhF,a,gCwBxI5B,oEAAO,IAAMhB,EAAgB,SAAA+I,GACzB,OAAOA,OAAQC,EAAY,qBAGlB3J,EAAmB,SAAC4J,GAAD,OAAe,SAACF,GAC5C,GAAIA,GAASA,EAAMG,OAASD,EACxB,MAAS,iBAAmBA,EAAY,c,sECAjCzE,IAJG,WACd,OAAQ,yBAAK/F,IAAK0K,Q,mBCHtBlP,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,2BAA2B,UAAY,0BAA0B,UAAY,0BAA0B,WAAa,6B,mBCAnLD,EAAOC,QAAU,CAAC,aAAe,+BAA+B,SAAW,2BAA2B,eAAiB,iCAAiC,OAAS,2B,0JCGpJqF,EAAuB,SAAA6J,GAAO,OAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASjL,EAAY,gCACpEkL,EAAWD,EAAKE,QAAWF,EAAKtD,WAAQgD,EAC9C,OACI,yBAAKpL,UAAWC,IAAO4L,aACnB,kBAACL,EAAD,iBAAaC,EAAWhL,EAAxB,CAA+BT,UAAW2L,GAAY1L,IAAO6L,YAC7D,6BACKH,GAAY,0BAAM3L,UAAWC,IAAO8L,cAAxB,IAAwCL,EAAKtD,MAA7C,SAMhB4D,EAAuB,SAAC3J,EAAahB,EAAM4K,EAAY/J,GAAhC,IAA2CzB,EAA3C,uDAAmD,GAAI/D,EAAvD,uDAA8D,GAA9D,OAChC,6BACI,kBAAC,IAAD,eAAO2F,YAAaA,EAAahB,KAAQA,EAClCc,SAAU8J,EACT/J,UAAWA,GACXzB,IACD/D,K,mBCrBfL,EAAOC,QAAU,CAAC,SAAW,2BAA2B,iBAAmB,mCAAmC,gBAAkB,oC,mBCAhID,EAAOC,QAAU,CAAC,YAAc,kCAAkC,SAAW,+BAA+B,aAAe,qC,gCCD3H,qEAMI4P,EAA4B,SAAClP,GAC7B,MAAO,CACHwK,SAAUxK,EAAMgL,KAAKR,WAIhBjE,EAAmB,SAACuD,GAAD,OAAetD,YAAQ0I,EAAR1I,EAAmC,SAAC/C,GAEvE,OAAKA,EAAM+G,SAEP,kBAACV,EAAcrG,GAFS,kBAAC,IAAD,CAAUL,GAAG,gB,mBCbrD/D,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,IAAM,8B,ySCE5EC,EAAe,CACX4P,YAAa,CACT,CAAE1P,GAAI,EAAGC,KAAK,mBAAqB0P,UAAU,IAC7C,CAAE3P,GAAI,EAAGC,KAAK,qBAAuB0P,UAAU,KAEnDlN,QAAS,KACTR,OAAQ,IAiDH2N,EAAa,SAACvO,GAAD,MAAW,CAACjB,KAAM,UAAWiB,SACjDwO,EAAqB,SAAC5N,GAAD,MAAa,CAAC7B,KAAM,mBAAoB6B,WAKtD6N,EAAiB,SAACvO,GAAD,OAAY,SAAC+I,GACvCxJ,IAASa,WAAWJ,GACfJ,MAAO,SAAAC,GACJkJ,EAPuB,CAAClK,KAAM,aAAcqC,QAOtBrB,EAASC,YAI9BU,EAAmB,SAACR,GAAD,OAAY,SAAC+I,GACzCxI,IAAWC,iBAAiBR,GACvBJ,MAAO,SAAAC,GACJkJ,EAASuF,EAAmBzO,EAASC,YAIpCW,EAAsB,SAACC,GAAD,OAAY,SAACqI,GAC5CxI,IAAWE,oBAAoBC,GAC1Bd,MAAO,SAAAC,GAC6B,IAA7BA,EAASC,KAAKkJ,YACdD,EAASuF,EAAmB5N,SAK/BE,EAAsB,SAACC,GAAD,OAAS,SAACkI,GACzCxI,IAAWK,oBAAoBC,GAC1BjB,MAAM,SAAAC,GAC8B,IAA7BA,EAASC,KAAKkJ,YACdD,EA9BS,SAAClI,GAAD,MAAU,CAAChC,KAAM,eAAgBgC,OA8BjC2N,CAAiB3O,EAASC,KAAKA,KAAK0H,cAKhDvG,EAAqB,SAACC,GAAD,8CAAa,WAAO6H,EAAUiD,GAAjB,iBAAAyC,EAAA,6DACrCzO,EAAUgM,IAAWhC,KAAKvL,GADW,SAEpB8B,IAAWU,mBAAmBC,GAFV,UAGV,KAD3BrB,EAFqC,QAG9BC,KAAKkJ,WAHyB,gBAI/BD,EAASwF,EAAevO,IAJO,8BAM/B+I,EAASwB,YAAW,cAAc,CAACC,OAAQ3K,EAASC,KAAKiF,SAAS,MANnC,kBAOxBwH,QAAQmC,OAAO7O,EAASC,KAAKiF,SAAS,KAPd,4CAAb,yDAWnBiG,IA/Fa,WAAmC,IAAlChM,EAAiC,uDAAzBT,EAAcU,EAAW,uCAE1D,OAAQA,EAAOJ,MACX,IAAK,UACD,IAAIoB,EAAO,CACPxB,GAAI,EACJC,KAAMO,EAAOa,KAAK6O,YAClBP,UAAW,GAEf,OAAO,2BACApP,GADP,IAEImP,YAAY,GAAD,mBAAMnP,EAAMmP,aAAZ,CAAwBlO,IACnC0O,YAAa,KAGrB,IAAK,aACD,OAAO,2BACA3P,GADP,IAEIkC,QAASjC,EAAOiC,UAGxB,IAAK,mBACD,OAAO,2BACAlC,GADP,IAEI0B,OAAQzB,EAAOyB,SAGvB,IAAK,aACD,OAAO,2BACA1B,GADP,IAEImP,YAAanP,EAAMmP,YAAY7H,QAAO,SAACrG,GAAD,OAAUA,EAAKxB,KAAOQ,EAAO2P,YAG3E,IAAK,eACD,OAAO,2BACA5P,GADP,IAEIkC,QAAQ,2BAAIlC,EAAMkC,SAAX,IAAoBsG,OAAQvI,EAAO4B,QAGlD,QACI,OAAO7B,K,gCCpDnB,6CAiBe4F,IAbE,SAACnC,GACd,IAAIwJ,EAAO,oBAAsBxJ,EAAMhE,GACvC,OACI,yBAAKuD,UAAWC,IAAO4M,cACnB,yBAAKhM,IAAI,iGACjBb,UAAWC,IAAO6M,SACV,kBAAC,IAAD,CAAS1M,GAAI6J,EAAMjK,UAAWC,IAAO8M,SAAUzM,gBAAiBL,IAAO+M,gBACjEvM,EAAMY,S,mBCXxBhF,EAAOC,QAAU,IAA0B,6C","file":"static/js/main.730d0a81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"site_nav\":\"Nav_site_nav__3MfPQ\",\"item\":\"Nav_item__96rLj\",\"link\":\"Nav_link__1CVGd\",\"activeLink\":\"Nav_activeLink__GsTVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formErr\":\"login_formErr__2_Z81\"};","let initialState = {\n        news: [\n            {id:1 , text: 'We added new function'},\n        ],\n        addNewsText: 'something happing?'\n}\n\nconst newsPage_reducer = (state = initialState, action) => {\n\n    switch(action.type) {\n        case 'updateNews':\n            let news = {\n                id: 2,\n                text: state.addNewsText\n            };\n\n            return {\n                ...state,\n                news: [...state.news,news],\n                addNewsText: '',\n            }\n\n        case 'updateNewsText':\n\n            return {...state,\n            addNewsText: action.text}\n\n        default:\n            return state;\n    }\n\n}\n\nexport const updateTextCont = (text) => ({ type:'updateNewsText', text: text});\nexport const addNewsCont = () => ({type: 'updateNews'});\n\nexport default newsPage_reducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2WupE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__21gkV\",\"dialog\":\"Dialogs_dialog__2uWZD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"current_page\":\"Pagination_current_page__2nwS2\"};","module.exports = __webpack_public_path__ + \"static/media/loading.cda0f21d.svg\";","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\n        'API-KEY': '4f14103a-79ff-4533-920c-cb87d80768f3'\n    }\n})\n\n\nexport const usersAPI = {\n\n    getUsers(currentPage = 1,pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then( response => response.data)\n    },\n\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n            .then (response => response.data)\n    },\n\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n            .then (response => response.data)\n    },\n\n    getProfile(userId) {\n        console.warn('Use obsolete method, please use new profileAPI method!!!')\n        return profileAPI.getProfile(userId)\n    },\n\n}\n\n\nexport const profileAPI = {\n\n    getProfile(userId) {\n        return instance.get(`profile/${userId}`);\n    },\n\n    getProfileStatus(userId) {\n        return instance.get(`profile/status/${userId}`)\n    },\n\n    updateProfileStatus(status) {\n        return instance.put('profile/status',{\n            status: status\n        })\n    },\n\n    updateProfileAvatar(img) {\n        let formData = new FormData();\n        formData.append('image', img)\n        return instance.put('/profile/photo',formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n\n    saveProfileChanges(profile) {\n        return instance.put('/profile', profile)\n    }\n\n}\n\n\nexport const authAPI = {\n\n    me() {\n        return instance.get('auth/me');\n    },\n\n    login (email, password, rememberMe = false) {\n      return instance.post('auth/login' , { email, password, rememberMe });\n    },\n\n    logout () {\n        return instance.delete('auth/login');\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_wrapper\":\"Users_users_wrapper__2MLsW\",\"user_wrapper\":\"Users_user_wrapper__3Na_N\",\"user_status\":\"Users_user_status__3D0B_\",\"user_info\":\"Users_user_info__2lov0\",\"ava\":\"Users_ava__dN1VK\",\"btn\":\"Users_btn__9AIH5\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport styles from './Nav.module.css';\nimport {NavLink} from 'react-router-dom';\n\nconst Nav = () => {\n    return (\n        <nav className={styles.site_nav}>\n            <div className={styles.item}>\n                <NavLink to='/profile' className={styles.link} activeClassName={styles.activeLink}>Profile</NavLink>\n            </div>\n            <div className={styles.item}>\n                <NavLink to='/users' className={styles.link} activeClassName={styles.activeLink}>Users</NavLink>\n            </div>\n            <div className={styles.item}>\n                <NavLink to='/messages' className={styles.link} activeClassName={styles.activeLink}>Messages</NavLink>\n            </div>\n            <div className={styles.item}>\n                <NavLink to='news' className={styles.link} activeClassName={styles.activeLink}>News</NavLink>\n            </div>\n            <div className={styles.item}>\n                <NavLink to='music' className={styles.link} activeClassName={styles.activeLink}>Music</NavLink>\n            </div>\n            <div className={styles.item}>\n                <NavLink to='settings' className={styles.link} activeClassName={styles.activeLink}>Settings</NavLink>\n            </div>\n        </nav>\n    )\n}\n\n\nexport default Nav;","import React from 'react';\nimport styles from './Music.module.css';\n\nconst Music = ( props ) => {\n\n    return (\n        <div>\n            <h1>Music</h1>\n        </div>\n    )\n}\n\nexport default Music","import React from 'react'\nimport styles from './Settings.module.jsx.css'\n\n\nconst Settings = ( props ) => {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\n\nexport default Settings","import React from 'react';\nimport styles from './Friend_sidebar.module.css';\n\nconst Friend_sidebar = (props) => {\n    return (\n        <div className={styles.friend_wrapper}>\n            <img src='https://i1.sndcdn.com/avatars-000323700456-wu94n2-t500x500.jpg' className={styles.ava}/>\n            <div>{props.fname}</div>\n        </div>\n    )\n}\n\nexport default Friend_sidebar;","import React from 'react';\nimport styles from './Sidebar.module.css';\nimport Friend_sidebar from './Friend/Friend_sidebar';\n\nconst Sidebar = (props) => {\n    let friendsElements = props.state.friendsData.map( friend => {\n        return <Friend_sidebar fname={friend.name}  key={friend.id}/>\n    })\n    return (\n        <div className={styles.sidebar}>\n            {friendsElements}\n        </div>\n    )\n}\n\nexport default Sidebar;","import React from 'react';\nimport styles from './Dialogs.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea, ValidatedElemCreator} from \"../../../common/FormControls\";\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/formValidator\";\n\nlet maxLength150 = maxLengthCreator(150);\nconst ValidatedTextarea = ValidatedElemCreator('textarea')\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} >\n            <Field component={ValidatedTextarea} name='addMessageText'\n                   validate={[requiredField,maxLength150]} placeholder='type your message'/>\n            <button>Send Message</button>\n        </form>\n    )\n}\n\nexport const AddMessageFormRedux = reduxForm({form: 'addMessageForm'})(AddMessageForm)\n\nconst Dialogs = (props) => {\n    return (\n        <div className={styles.dialog}>\n            <div>{props.text}</div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import React from 'react'\nimport styles from './Messages.module.css';\nimport Dialogs, { AddMessageFormRedux} from \"./Dialogs/Dialogs\";\nimport Contacts from \"./Contacts/Contacts\";\n\n\nconst Messages = (props) => {\n\n    let contactsElement = props.contactsData.map( contact =>\n    {\n        return (\n            <Contacts name={contact.name} key={contact.id} id={contact.id}/>\n            )\n    })\n\n    let dialogsElement = props.dialogsData.map (dialog => {\n        return (\n            <Dialogs text={dialog.text} key={dialog.id}/>\n        )\n    })\n\n    return (\n        <div className={styles.messages}>\n            <div className={styles.contacts_wrapper}>\n                {contactsElement}\n            </div>\n            <div className={styles.dialogs_wrapper}>\n                {dialogsElement}\n            </div>\n            <AddMessageFormRedux onSubmit={props.addMessage}/>\n        </div>\n    )\n}\n\nexport default Messages;","let initialState = {\n        contactsData: [\n            { id:1, name: 'Dmitry' },\n            { id:2, name: 'Danil' },\n            { id:3, name: 'Andrey' },\n            { id:4, name: 'Kostya' },\n            { id:5, name: 'Artem' },\n        ],\n        dialogsData: [\n            {id:1, text:'Hey.' },\n            {id:2, text:'How about Thusday at 7.00 ?' },\n            {id:3, text:'Have any plan on the next weekend?' }\n        ],\n\n}\n\n\nconst messagesPage_reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case 'addMessageState':\n            let message = {\n                id: 4,\n                text: action.data.addMessageText\n            };\n\n             return {\n                 ...state,\n                 dialogsData: [...state.dialogsData,message],\n             }\n\n\n        default:\n            return state;\n    }\n}\n\nexport const addMessage = (data) => ({type: 'addMessageState', data});\n\nexport default messagesPage_reducer;","import React from 'react'\nimport Messages from \"./Messages\";\nimport {addMessage} from \"../../pseudoRedux/messagesPage-reducer\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n\n    return {\n        contactsData: state.messagesPage.contactsData,\n        dialogsData: state.messagesPage.dialogsData,\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps,{addMessage })\n)\n(Messages);","import {usersAPI} from \"../api/api\";\n\nlet initialState = {\n    usersData : [],\n    pagesData: {\n        pageSize: 8,\n        totalUsersCount: 0,\n        currentPage: 1,\n    },\n    isLoading: true,\n    isDisabled: [],\n    fake: 1,\n}\n\n\nconst users_reducer = (state = initialState, action) => {\n    // debugger\n    switch (action.type) {\n        case 'fake': return {...state, fake: state.fake + 1}\n        case 'follow':\n            return {\n                ...state,\n                usersData: state.usersData.map( user => {\n                    if( user.id === action.userId) {\n                        return {\n                            ...user,\n                            followed: true,\n                        }\n                    }\n                    return user;\n                })\n            }\n        case 'unfollow':\n            return {\n                ...state,\n                usersData: state.usersData.map( user => {\n                    if ( user.id === action.userId) {\n                        return {\n                            ...user,\n                            followed: false\n                        }\n                    }\n                    return user;\n                })\n            }\n\n        case 'setUsers' :\n            return {\n                ...state,\n                usersData: [...action.users]\n                }\n\n\n        case 'setCurrentPage' :\n            return {\n                ...state,\n                pagesData: {\n                    ...state.pagesData,\n                    currentPage: action.currentPage}\n            }\n\n        case 'setPagesTotalCount':\n            return {\n                ...state,\n                pagesData: {...state.pagesData,\n                    totalUsersCount: action.totalCount,\n                }\n            }\n\n        case 'isLoading':\n            return {\n                ...state,\n                isLoading: action.isLoading,\n            }\n\n        case 'disableToggle':\n            return {\n                ...state,\n                isDisabled: action.condition\n                    ? [...state.isDisabled,action.userId]\n                    : state.isDisabled.filter( id => id != action.userId)\n            }\n\n        default :\n            return state;\n    }\n}\n\nexport default users_reducer;\n\nconst followAC = (userId) => ({type:'follow' , userId});\nconst unfollowAC = (userId) => ({type:'unfollow', userId});\nconst setUsersAC = (users) => ({type:'setUsers', users});\nexport const setCurrentPage = (currentPage) => ({type: 'setCurrentPage', currentPage});\nexport const setPagesTotalCount = (totalCount) => ({type: 'setPagesTotalCount', totalCount});\nexport const isLoadingToogle = (isLoading) => ({type:'isLoading', isLoading});\nexport const disableToggle = (condition, userId) => ({type: 'disableToggle', condition, userId});\n\nexport const requestUsers = (currentPage, pageSize) => {\n    return (dispatch) => {\n        dispatch(isLoadingToogle(true));\n        usersAPI.getUsers(currentPage, pageSize)\n            .then(data => {\n                dispatch(isLoadingToogle(false));\n                dispatch(setUsersAC(data.items));\n                dispatch(setPagesTotalCount(data.totalCount));\n            });\n    }\n};\n\nexport const unfollow = (userId) => {\n    return (dispatch) => {\n        dispatch(disableToggle(true, userId));\n        usersAPI.unfollow(userId)\n            .then( data => {\n                dispatch(disableToggle(false, userId));\n                if (data.resultCode === 0) {\n                    dispatch(unfollowAC(userId));\n                }\n            })\n    }\n};\n\nexport const follow = (userId) => {\n    return (dispatch) => {\n        dispatch(disableToggle(true, userId));\n        usersAPI.follow(userId)\n            .then( data => {\n                dispatch(disableToggle(false, userId));\n                if (data.resultCode === 0) {\n                    dispatch(followAC(userId));\n                }\n            })\n    }\n};","import React from \"react\";\nimport styles from './Pagination.module.css'\n\nconst Pagination = ({pagesCount,currentPage,onPageChanged}) => {\n\n    let pagesNumb = [];\n    for ( let i = 1; i <=5; i++) {\n        pagesNumb.push(i);\n    }\n\n    for ( let j =  pagesCount - 2; j <= pagesCount; j++) {\n        pagesNumb.push(j);\n    }\n\n    return (\n        <div>\n        {pagesNumb.map( (page, id) => {\n            return <span className={(currentPage === page && styles.current_page).toString()} key={id}\n                         onClick={ () => {onPageChanged(page)}}> {page} </span>\n        })}\n    </div>\n    )\n}\n\nexport default Pagination","import React from \"react\";\nimport styles from './Users.module.css'\nimport userPhoto from '../../assets/img/avatar_default.jpg'\nimport {NavLink} from \"react-router-dom\";\nimport Pagination from \"../../common/Pagination\";\n\nconst Users = (props) => {\n\n  return  (\n            <div className={styles.users_wrapper}>\n\n                <Pagination currentPage={props.currentPage} onPageChanged={props.onPageChanged}\n                            pagesCount={props.pagesCount} />\n\n                {\n                    props.usersData.map(user =>\n                    <div key={user.id} className={styles.user_wrapper}>\n                        <div className={styles.user_status}>\n                            <NavLink to={`/profile/${user.id}`}>\n                                {(user.photos.small) ? <img src={user.photos.small} className={styles.ava}></img>\n                                : <img src={userPhoto} className={styles.ava}></img>}\n                            </NavLink>\n                            { user.followed\n                                ? <button className={styles.btn} disabled={props.isDisabled.some( id => id === user.id)} onClick={() => {\n                                    props.unfollow(user.id)\n\n                                    }}>Unfollow</button>\n                                : <button className={styles.btn} disabled={props.isDisabled.some(id => id === user.id)} onClick={() => {\n                                    props.follow(user.id)\n\n                                    }}>Follow</button>}\n                        </div>\n                        <div className={styles.user_info}>\n                            <div>\n                                <div>{user.name}</div>\n                                <div>{user.status}</div>\n                            </div>\n                            <div>{'user.location'}</div>\n                        </div>\n                    </div>\n                )}\n            </div>\n  )\n}\n\nexport default Users","import {createSelector} from \"reselect\";\n// export const getUsersData = state => (state.usersPage.usersData);\n//искусственно усложненный селектор\n\nexport const getUsersDataSelector = state => state.usersPage.usersData;\n\nexport const getUsersDataSuperSelector = createSelector(getUsersDataSelector, (users) => {\n    return users.filter(user => true)\n})\n//\n\nexport const getPageSize = state => (state.usersPage.pagesData.pageSize);\nexport const getCurrentPage = state => (state.usersPage.pagesData.currentPage);\nexport const getPagesCount = state => {\n    return Math.ceil(state.usersPage.pagesData.totalUsersCount / state.usersPage.pagesData.pageSize)}\nexport const getIsLoading = state => state.usersPage.isLoading;\nexport const getIsDisabled = state => state.usersPage.isDisabled;\n\n\n\n\n\n\n\n","import React from \"react\";\nimport {\n    follow, requestUsers,\n    setCurrentPage,\n    unfollow\n} from \"../../pseudoRedux/users-reducer\";\nimport Users from \"./Users\";\nimport {connect} from \"react-redux\";\nimport Preloader from \"../../common/Preloader\";\nimport {withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage, getIsDisabled,\n    getIsLoading,\n    getPagesCount,\n    getPageSize,\n    getUsersDataSuperSelector\n} from \"../../pseudoRedux/users-selectors\";\n\n\nclass UsersInnerContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n      }\n\n    onPageChanged = (page) => {\n        this.props.setCurrentPage(page);\n        this.props.getUsers(page, this.props.pageSize);\n     }\n\n    render() {\n       // console.log('reRender(Users)')\n        return (\n            <>\n                {this.props.isLoading && <Preloader/>}\n                <Users usersData={this.props.usersData} pageSize={this.props.pageSize}\n                       currentPage={this.props.currentPage} pagesCount={this.props.pagesCount}\n                       onPageChanged={this.onPageChanged}\n                       follow={this.props.follow}\n                       unfollow={this.props.unfollow} isDisabled={this.props.isDisabled}\n                       disableToggle={this.props.disableToggle}\n                />\n            </>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    // console.log('MSTP(users)');\n    return {\n        usersData: getUsersDataSuperSelector(state),\n        pageSize: getPageSize(state),\n        currentPage: getCurrentPage(state),\n        pagesCount: getPagesCount(state),\n        isLoading: getIsLoading(state),\n        isDisabled: getIsDisabled(state)\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps,\n        {follow, unfollow,getUsers: requestUsers, setCurrentPage }),\n    withRouter\n    // withAuthRedirect\n)\n(UsersInnerContainer)\n\n","import React from 'react' ;\nimport styles from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport Preloader from \"../../common/Preloader\";\n\nconst Header = (props) => {\n\n    return (\n        <header className= {styles.header}>\n            <img src='https://i1.sndcdn.com/avatars-000324128843-md332r-t500x500.jpg' />\n            <div className={styles.auth_block}>\n\n                {!props.isLogged\n                    ? <>\n                        <NavLink to={'/login'} className={styles.auth_link}>Login</NavLink>\n                        {props.isLoading && <Preloader/>}\n                    </>\n                    : <>\n                        <div className={styles.auth_info}>{props.login}</div>\n                        <button onClick={props.logout} className={styles.logout_btn}>Logout</button>\n                    </>\n                }\n            </div>\n        </header >\n    )\n}\n\nexport default Header;","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nlet initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isLogged: false,\n    isLoading: false,\n}\n\nlet auth_reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case 'setAuthorizedUser':\n            return {\n                ...state,\n                ...action.data\n            }\n        case 'loadingAuthDataToogle':\n            return {\n                ...state,\n                isLoading: action.isLoading\n            }\n        default:\n            return state;\n    }\n}\n\nconst setAuthorizedUser = (id, login, email, isLogged) => ({\n    type: 'setAuthorizedUser',\n    data: {id, login, email, isLogged}\n})\nconst loadingAuthDataToogle = (isLoading) => ({type: 'loadingAuthDataToogle', isLoading})\n\nexport const getAuthProfile = () => (dispatch) => {\n    // dispatch(loadingAuthDataToogle(true));\n   return authAPI.me()\n        .then((response) => {\n            if (response.data.resultCode === 0) {\n                // dispatch(loadingAuthDataToogle(false));\n                let {id, login, email} = response.data.data;\n                dispatch(setAuthorizedUser(id, login, email, true));\n            }\n            // dispatch(loadingAuthDataToogle(false));\n        });\n};\n\nexport const login = (email, password, rememberMe) => (dispatch) => {\n\n    authAPI.login(email, password, rememberMe)\n        .then(response => {\n            // debugger\n                if (response.data.resultCode === 0) {\n                    dispatch(getAuthProfile())\n                } else {\n                    let errAction = stopSubmit('login', {_error: response.data.messages})\n                    dispatch(errAction);\n                }\n            }\n        )\n}\n\nexport const logout = () => (dispatch) => {\n    authAPI.logout()\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(setAuthorizedUser(null, null, null, false));\n            }\n        })\n}\n\n\nexport default auth_reducer;","import React from 'react'\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../pseudoRedux/Auth-reducer\";\n\nclass HeaderInnerContainer extends React.Component {\n\n   render() {\n\n        return (\n            <>\n                <Header isLoading={this.props.auth.isLoading}\n                        isLogged={this.props.auth.isLogged}\n                        login={this.props.auth.login}\n                        logout={this.props.logout}/>\n            </>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n\n    return {\n        ...state\n    }\n}\n\n\nconst HeaderContainer = connect(mapStateToProps, {logout})(HeaderInnerContainer)\n\nexport default HeaderContainer","import React from 'react'\nimport {Field, reduxForm} from \"redux-form\";\nimport {login} from \"../../pseudoRedux/Auth-reducer\";\nimport {ValidatedElemCreator} from \"../../common/FormControls\";\nimport {requiredField} from \"../../utils/validators/formValidator\";\nimport {connect} from \"react-redux\";\nimport styles from './login.module.css'\n\nconst ValidatedInput = ValidatedElemCreator('input')\n\nconst LoginForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder={'email'} name={'email'} component={ValidatedInput}\n                validate={[requiredField]} type={'email'}/>\n            </div>\n            <div>\n                <Field placeholder={'password'} name={'password'} component={ValidatedInput}\n                type={'password'} validate={[requiredField]}/>\n            </div>\n            <div>\n                <Field type={'checkbox'} name={'rememberMe'} component={ValidatedInput} />\n            </div>\n            {props.error && <p className={styles.formErr}>{props.error}</p>}\n            <div>\n                <button>Sign in</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({ form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    return (\n        <>\n            <p> Login</p>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </>\n    )\n}\n\nexport default connect(null,{login})(Login)","import {getAuthProfile} from \"./Auth-reducer\";\n\nlet initialState = {\n    initialized: false,\n}\n\nlet app_reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case 'initializedSuccess':\n            return {\n                ...state,\n                initialized: true\n        }\n\n        default :\n            return state;\n    }\n}\n\nlet initializedSuccess = () => ({type: 'initializedSuccess'});\n\nexport let initializingApp = () => (dispatch) => {\n    let promise = dispatch(getAuthProfile());\n\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        })\n}\n\nexport default app_reducer;","let initialState = {\n        friendsData: [\n            {id:1, name: 'Vlad'},\n            {id:2, name: 'Ivan'},\n            {id:3, name: 'Nikita'}\n        ]\n\n}\n\nconst sideBar_reducer = (state = initialState, action) => {\n    return {...state};\n}\n\n\nexport default sideBar_reducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport messagesPage_reducer from \"../pseudoRedux/messagesPage-reducer\";\nimport newsPage_reducer from \"../pseudoRedux/newsPage-reducer\";\nimport profilePage_reducer from \"../pseudoRedux/profilePage-reducer\";\nimport sideBar_reducer from \"../pseudoRedux/sideBar-reducer\";\nimport users_reducer from \"../pseudoRedux/users-reducer\";\nimport auth_reducer from \"../pseudoRedux/Auth-reducer\";\nimport thunkMiddleWare from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport app_reducer from '../pseudoRedux/app_reducer'\n\nlet reducers = combineReducers({\n    messagesPage: messagesPage_reducer,\n    newsPage: newsPage_reducer,\n    profilePage: profilePage_reducer,\n    sidebarPage: sideBar_reducer,\n    usersPage: users_reducer,\n    auth: auth_reducer,\n    form: formReducer,\n    app: app_reducer,\n\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)\n));\n\n\n\n// let store = createStore(reducers, applyMiddleware(thunkMiddleWare));\n\nwindow.__store__ = store;\n\nexport default store;","import React from 'react';\nimport './App.css';\nimport Nav from './components/Nav/Nav';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport {BrowserRouter, HashRouter, Route, withRouter} from 'react-router-dom';\nimport MessagesContainer from \"./components/Messages/MessagesContainer\";\nimport loadable from '@loadable/component'\nimport UsersContainer from \"./components/Users/UsersContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from './components/Login/Login';\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializingApp} from \"./pseudoRedux/app_reducer\";\nimport Preloader from \"./common/Preloader\";\nimport store from \"./redux/redux-store\";\n\n\nconst ProfileContainer = loadable(() => import(\"./components/Profile/ProfileContainer\")) ;\nconst NewsContainer = loadable(() => import(\"./components/News/NewsContainer\"))\n\nclass App extends React.Component {\n    componentDidMount() {\n           this.props.initializingApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader className='initialize_load'/>\n        }\n\n        let state = this.props.store.getState();\n\n        return (\n            <div className='app_wrapper'>\n                <HeaderContainer/>\n                <Nav/>\n                <Sidebar state={state.sidebarPage}/>\n                <div className='wrapper_main_content'>\n                    {/*< Route exact path='/' render={ () => <ProfileContainer />}/>*/}\n                    < Route path='/profile/:UserId?' render={() => <ProfileContainer/>}/>\n                    < Route path='/messages' render={() => <MessagesContainer/>}/>\n                    < Route path='/news' render={() => <NewsContainer/>}/>\n                    < Route path='/music' render={Music}/>\n                    < Route path='/settings' render={Settings}/>\n                    < Route path='/users' render={() => <UsersContainer/>}/>\n                    < Route path='/login' render={() => <LoginPage/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nlet AppContainer =  compose(\n    withRouter,\n    connect(mapStateToProps,{initializingApp}))(App);\n\nlet MainApp = (props) => {\n    return (\n    <HashRouter >\n        <Provider store={store}>\n            <AppContainer store={store}/>\n        </Provider>\n    </HashRouter>\n    )\n}\n\nexport default MainApp","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport MainApp from \"./App\";\n\n// setInterval(() => {\n//     store.dispatch({type:'fake'})\n// }, 1000);\n\nReactDOM.render(\n    // <React.StrictMode>\n    <MainApp />,\n    // </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nexport const requiredField = value => {\n    return value ? undefined : 'field is required';\n};\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value && value.length > maxLength) {\n        return ( 'maxLength is: ' + maxLength + ' symbols')\n    };\n    return undefined;\n};","import preloader from \"../assets/img/loading.svg\";\nimport React from \"react\";\n\nconst Preloader = () => {\n    return  <img src={preloader}/>\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"auth_block\":\"Header_auth_block__13h6M\",\"auth_link\":\"Header_auth_link__k0fTs\",\"auth_info\":\"Header_auth_info__3MUoW\",\"logout_btn\":\"Header_logout_btn__2uOiy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_info\":\"Contacts_contact_info__1g_SO\",\"nameLink\":\"Contacts_nameLink__2W9V0\",\"active_contact\":\"Contacts_active_contact__2QuiQ\",\"avatar\":\"Contacts_avatar__2nOyk\"};","import React from 'react'\nimport styles from './FormControls.module.css'\nimport {Field} from \"redux-form\";\n\nexport const ValidatedElemCreator = Element => ({ input, meta, ...props }) => {\n    const hasError = meta.touched ?  meta.error : undefined;\n    return (\n        <div className={styles.postWrapper}>\n            <Element {...input} {...props} className={hasError && styles.fieldErr}/>\n            <div>\n                {hasError && <span className={styles.errorMessage}> {meta.error} </span>}\n            </div>\n        </div>\n    );\n};\n\nexport const createReduxFormField = (placeholder, name, validators, component, props = {}, text = '') => (\n    <div>\n        <Field placeholder={placeholder} name = {name}\n               validate={validators}\n                component={component}\n            {...props}\n            />{text}\n    </div>\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__24vfu\",\"contacts_wrapper\":\"Messages_contacts_wrapper__1VNYv\",\"dialogs_wrapper\":\"Messages_dialogs_wrapper__VGXck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrapper\":\"FormControls_postWrapper__12rCV\",\"fieldErr\":\"FormControls_fieldErr__dJYyD\",\"errorMessage\":\"FormControls_errorMessage__XmrRL\"};","import React from 'react'\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n\n\nlet mapStateToPropsToRedirect = (state) => {\n    return {\n        isLogged: state.auth.isLogged\n    }\n}\n\nexport const withAuthRedirect = (Component) => connect(mapStateToPropsToRedirect)((props) =>\n        {\n            if (!props.isLogged) return <Redirect to='/login'/>\n            return (\n                <Component {...props} />\n            )\n        }\n    )\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_wrapper\":\"Friend_sidebar_friend_wrapper__crHPE\",\"ava\":\"Friend_sidebar_ava__2iOpd\"};","import {profileAPI, usersAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nlet initialState = {\n        myPostsData: [\n            { id: 1, text:'Hi, how are you?' , likeCount:10},\n            { id: 2, text:\"It's my first post\" , likeCount:25}\n        ],\n        profile: null,\n        status: '',\n};\n\nconst profilePage_reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case 'addPost':\n            let post = {\n                id: 3,\n                text: action.data.newPostText,\n                likeCount: 0\n            };\n            return {\n                ...state,\n                myPostsData: [...state.myPostsData,post],\n                newPostText: ''\n            };\n\n        case 'setProfile':\n            return {\n                ...state,\n                profile: action.profile,\n            }\n\n        case 'setProfileStatus':\n            return {\n                ...state,\n                status: action.status\n            }\n\n        case 'deletePost':\n            return {\n                ...state,\n                myPostsData: state.myPostsData.filter((post) => post.id !== action.postId)\n            }\n\n        case 'changeAvatar' :\n            return {\n                ...state,\n                profile:{...state.profile, photos: action.img}\n            }\n\n        default:\n            return state;\n    }\n}\n\n\n\nexport const addNewPost = (data) => ({type: 'addPost', data });\nconst setProfileStatusAC = (status) => ({type: 'setProfileStatus', status })\nconst setProfileAC = (profile) => ({type: 'setProfile', profile});\nconst setProfileAvatar = (img) => ({type: 'changeAvatar', img})\nexport const deletePost = (postId) => ({type: 'deletePost', postId})\n\nexport const getUserProfile = (userId) => (dispatch) => {\n    usersAPI.getProfile(userId)\n        .then ( response => {\n            dispatch(setProfileAC(response.data))}\n        )\n}\n\nexport const getProfileStatus = (userId) => (dispatch) => {\n    profileAPI.getProfileStatus(userId)\n        .then ( response => {\n            dispatch(setProfileStatusAC(response.data))\n        })\n}\n\nexport const updateProfileStatus = (status) => (dispatch) => {\n    profileAPI.updateProfileStatus(status)\n        .then ( response => {\n            if (response.data.resultCode === 0) {\n                dispatch(setProfileStatusAC(status))\n            }\n        })\n}\n\nexport const updateProfileAvatar = (img) => (dispatch) => {\n    profileAPI.updateProfileAvatar(img)\n        .then( response => {\n            if (response.data.resultCode === 0) {\n                dispatch(setProfileAvatar(response.data.data.photos))\n            }\n        })\n}\n\nexport const saveProfileChanges = (profile) => async (dispatch, getState) => {\n    const userId =  getState().auth.id;\n    const response = await profileAPI.saveProfileChanges(profile)\n    if (response.data.resultCode === 0) {\n                dispatch(getUserProfile(userId))\n            } else {\n                dispatch(stopSubmit('editProfile',{_error: response.data.messages[0]}));\n                return Promise.reject(response.data.messages[0]);\n            }\n}\n\nexport default profilePage_reducer;","import React from 'react';\nimport styles from './Contacts.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Contacts = (props) => {\n    let path = '/messages/dialog/' + props.id;\n    return (\n        <div className={styles.contact_info}>\n            <img src='https://upload.wikimedia.org/wikipedia/en/thumb/8/8b/Avatar_2_logo.jpg/220px-Avatar_2_logo.jpg'\n    className={styles.avatar}/>\n            <NavLink to={path} className={styles.nameLink} activeClassName={styles.active_contact}\n                >{props.name}</NavLink>\n        </div>\n    )\n}\n\n\nexport default Contacts;","module.exports = __webpack_public_path__ + \"static/media/avatar_default.82c9d8dd.jpg\";"],"sourceRoot":""}