{"version":3,"sources":["components/Profile/ProfileInfo/ProfileStatus.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","React","Component","props","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","className","styles","autoFocus","onKeyPress","evt","key","updateProfileStatus","onChange","currentTarget","ProfileInfo","profile","Preloader","user_profile","src","photos","small","defAvatar","user_avatar","isOwner","upload_msg","type","upload_input","e","target","files","chosenImg","updateProfileAvatar","fullName","aboutMe","lookingForAJob","profile_contacts","entries","contacts","map","social","contact","contact_item","Post","post","text","likeCount","maxLength30","maxLengthCreator","ValidatedTextarea","ValidatedElemCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","name","validate","requiredField","placeholder","MyPosts","my_posts_element","myPostsData","id","posts","header","addNewPost","MyPostsContainer","connect","state","profilePage","newPostText","Profile","InnerProfileContainer","userId","this","match","params","UserId","authorizedUserId","history","getUserProfile","getProfileStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isLogged","withRouter"],"mappings":"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","file":"static/js/3.06316077.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__SCDgG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_profile\":\"ProfileInfo_user_profile__1TbR1\",\"user_avatar\":\"ProfileInfo_user_avatar__1WAZg\",\"fullName\":\"ProfileInfo_fullName__2p--3\",\"profile_contacts\":\"ProfileInfo_profile_contacts__85HBS\",\"contact_item\":\"ProfileInfo_contact_item__2bf50\",\"upload_input\":\"ProfileInfo_upload_input__1e95T\",\"upload_msg\":\"ProfileInfo_upload_msg__1hWzS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"header\":\"MyPosts_header__2Sser\",\"post\":\"MyPosts_post__38Ltf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from 'react'\nimport styles from './ProfileStatus.module.css'\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(()=> {\n        setStatus(props.status)\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    const deactivateStatusEditMode = (evt) => {\n        if (evt.key === 'Enter') {\n            setEditMode(false);\n            props.updateProfileStatus(status)\n        }\n    }\n\n    const onStatusChange = (evt) => {\n        setStatus(evt.currentTarget.value)\n    }\n\n        return (\n            <>\n            {!editMode &&\n            <div>\n                <span\n                    onClick={activateEditMode}\n                      className={styles.status}>{props.status || 'type your status'}</span>\n            </div>\n            }\n\n            {editMode &&\n            <div>\n                <input autoFocus={true}\n                       onKeyPress={deactivateStatusEditMode}\n                       value={status}\n                       onChange={onStatusChange}\n                />\n            </div>\n            }\n            </>\n        )\n\n\n}\n\nexport default ProfileStatusWithHooks","import React from 'react'\nimport styles from './ProfileStatus.module.css'\n\n// классовый аналог компоненты  ProfileStatusWithHooks\n\nclass ProfileStatus extends React.Component {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateStatusEditMode = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    deactivateStatusEditMode = (evt) => {\n        if (evt.key === 'Enter') {\n            this.setState({\n                editMode: false\n            });\n            this.props.updateProfileStatus(this.state.status)\n        }\n    }\n\n    onStatusChange = (evt) => {\n        this.setState ({\n            status: evt.currentTarget.value\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            <>\n            {!this.state.editMode &&\n            <div>\n                <span onClick={this.activateStatusEditMode}\n                      className={styles.status}>{this.props.status || 'type your status'}</span>\n            </div>\n            }\n\n            {this.state.editMode &&\n            <div>\n                <input autoFocus={true} onKeyPress={this.deactivateStatusEditMode} value={this.state.status} onChange={this.onStatusChange}/>\n            </div>\n            }\n            </>\n        )\n    }\n\n}\n\nexport default ProfileStatus","import React from 'react' ;\nimport styles from './ProfileInfo.module.css';\nimport Preloader from \"../../../common/Preloader\";\nimport ProfileStatus from './ProfileStatus'\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport defAvatar from '../../../assets/img/avatar_default.jpg'\nimport {updateProfileAvatar} from \"../../../pseudoRedux/profilePage-reducer\";\n\n\nconst ProfileInfo = (props) => {\n\n    if (!props.profile) {\n        return <Preloader/>\n    }\n\n    const onNewAvatarSelected = (e) => {\n        if (e.target.files.length) {\n            let chosenImg = e.target.files[0];\n            props.updateProfileAvatar(chosenImg);\n        }\n    }\n\n    return (\n        <div>\n            <div className={styles.user_profile}>\n                    <img src={props.profile.photos.small || defAvatar} className={styles.user_avatar}/>\n                { props.isOwner &&\n                    <label className={styles.upload_msg}>\n                        <input type='file' className={styles.upload_input}\n                                onChange={onNewAvatarSelected}/>\n                    change avatar\n                    </label>\n                    }\n                <div className={styles.fullName}> {props.profile.fullName}</div>\n                <div>{props.profile.aboutMe}</div>\n                <ProfileStatusWithHooks status={props.status} updateProfileStatus={props.updateProfileStatus}/>\n                {props.profile.lookingForAJob ? <div>Ищу работу</div> : <div>Работа это не моё</div>}\n                <ul className={styles.profile_contacts}>\n                    {Object.entries(props.profile.contacts).map( ([social, contact]) => {\n                        if (contact) {\n                            return <li className={styles.contact_item} >{social} : {contact} </li>\n                        }\n                    })}\n                </ul>\n            </div>\n\n            <div>\n                Main content\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react' ;\nimport styles from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n        <div className={styles.post}>\n            {props.text}\n            <div>\n                <span>like: {props.likeCount}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;\n","import React from 'react' ;\nimport styles from './MyPosts.module.css';\nimport Post from './Post/Post'\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/formValidator\";\nimport {ValidatedElemCreator} from \"../../../common/FormControls\";\n\nlet maxLength30 = maxLengthCreator(30);\nconst ValidatedTextarea = ValidatedElemCreator('textarea')\n\nconst addPostForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={ValidatedTextarea} name='newPostText'\n                       validate={[requiredField,maxLength30]} placeholder='type new post'/>\n            </div>\n            <div>\n                <button> new post</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddPostFormRedux = reduxForm({ form: 'addPostForm' })(addPostForm)\n\nconst MyPosts = (props) => {\n\n    let my_posts_element = props.myPostsData.map ( post => {\n        return (\n            <Post text={post.text} likeCount={post.likeCount} key={post.id}/>\n        )\n    });\n\n\n    return (\n       <div className={styles.posts}>\n           <h3 className={styles.header}>My posts</h3>\n           <div>\n               {my_posts_element}\n           </div>\n           <AddPostFormRedux onSubmit={props.addNewPost} />\n       </div>\n    )\n}\n\n\nexport default MyPosts;","import React from 'react' ;\nimport {addNewPost} from \"../../../pseudoRedux/profilePage-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n\n    return {\n        myPostsData: state.profilePage.myPostsData,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps,{addNewPost})(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react' ;\nimport styles from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n\n    return (\n        <div className={styles.profile}>\n            <ProfileInfo profile={props.profile} status={props.status} updateProfileStatus={props.updateProfileStatus}\n                        isOwner={props.isOwner} updateProfileAvatar={props.updateProfileAvatar}/>\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react' ;\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {\n    getProfileStatus,\n    getUserProfile,\n    updateProfileAvatar,\n    updateProfileStatus\n} from \"../../pseudoRedux/profilePage-reducer\";\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass InnerProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.UserId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                userId = this.props.history.push('/login')\n            }\n        }\n\n\nthis.props.getUserProfile(userId);\nthis.props.getProfileStatus(userId);}\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.UserId !== prevProps.match.params.UserId) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} updateProfileStatus={this.props.updateProfileStatus} status={this.props.status}\n                     isOwner={!this.props.match.params.UserId}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.id,\n        isLogged: state.auth.isLogged,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getProfileStatus, updateProfileStatus,updateProfileAvatar}),\n    withRouter\n    // withAuthRedirect\n)(InnerProfileContainer)"],"sourceRoot":""}