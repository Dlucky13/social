{"version":3,"sources":["components/Profile/ProfileInfo/ProfileStatus.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","React","Component","ValidatedInput","ValidatedElemCreator","reduxForm","form","profile","handleSubmit","error","onSubmit","createReduxFormField","type","keys","contacts","map","contact","key","className","styles","formErr","ProfileData","isOwner","activateEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","profile_contacts","entries","social","onClick","SocialContacts","contact_item","ProfileInfo","updateProfileAvatar","status","updateProfileStatus","saveProfileChanges","useState","editMode","setEditMode","Preloader","initialValues","formData","then","user_profile","src","photos","small","defAvatar","user_avatar","upload_msg","upload_input","onChange","e","target","files","chosenImg","Post","props","post","text","likeCount","maxLength30","maxLengthCreator","ValidatedTextarea","AddPostFormRedux","Field","component","name","validate","requiredField","placeholder","MyPosts","my_posts_element","myPostsData","id","posts","header","addNewPost","MyPostsContainer","connect","state","profilePage","newPostText","Profile","InnerProfileContainer","userId","this","match","params","UserId","authorizedUserId","history","getUserProfile","getProfileStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isLogged","withRouter"],"mappings":"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","file":"static/js/3.7ce60224.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__SCDgG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_profile\":\"ProfileInfo_user_profile__1TbR1\",\"user_avatar\":\"ProfileInfo_user_avatar__1WAZg\",\"fullName\":\"ProfileInfo_fullName__2p--3\",\"profile_contacts\":\"ProfileInfo_profile_contacts__85HBS\",\"contact_item\":\"ProfileInfo_contact_item__2bf50\",\"upload_input\":\"ProfileInfo_upload_input__1e95T\",\"upload_msg\":\"ProfileInfo_upload_msg__1hWzS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"header\":\"MyPosts_header__2Sser\",\"post\":\"MyPosts_post__38Ltf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\nimport styles from './ProfileStatus.module.css'\n\n// классовый аналог компоненты  ProfileStatusWithHooks\n\nclass ProfileStatus extends React.Component {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateStatusEditMode = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    deactivateStatusEditMode = (evt) => {\n        if (evt.key === 'Enter') {\n            this.setState({\n                editMode: false\n            });\n            this.props.updateProfileStatus(this.state.status)\n        }\n    }\n\n    onStatusChange = (evt) => {\n        this.setState ({\n            status: evt.currentTarget.value\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            <>\n            {!this.state.editMode &&\n            <div>\n                <span onClick={this.activateStatusEditMode}\n                      className={styles.status}>{this.props.status || 'type your status'}</span>\n            </div>\n            }\n\n            {this.state.editMode &&\n            <div>\n                <input autoFocus={true} onKeyPress={this.deactivateStatusEditMode} value={this.state.status} onChange={this.onStatusChange}/>\n            </div>\n            }\n            </>\n        )\n    }\n\n}\n\nexport default ProfileStatus","import React, {useState} from \"react\";\nimport defAvatar from \"../../../assets/img/avatar_default.jpg\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport {createReduxFormField, ValidatedElemCreator} from \"../../../common/FormControls\";\nimport {requiredField} from \"../../../utils/validators/formValidator\";\nimport {Field, reduxForm} from \"redux-form\";\nimport handleSubmit from \"redux-form/lib/handleSubmit\";\nimport Contacts from \"../../Messages/Contacts/Contacts\";\nimport styles from \"../../Login/login.module.css\";\n\n\nlet ValidatedInput = ValidatedElemCreator('input')\n\n\nconst ProfileDataForm = ({profile,handleSubmit,error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <b>Full Name</b> {createReduxFormField ('full Name', 'fullName', [],ValidatedInput )}\n\n            {createReduxFormField('','lookingForAJob',[],\n            'input', {type: 'checkbox'},'Ищу работу')}\n\n            <b>My professional skills</b> :\n            {createReduxFormField('My professional skills','lookingForAJobDescription',[],\n            'textarea')}\n\n            <div>\n                <b>About me</b> :\n                {createReduxFormField('about Me', 'aboutMe', [], 'input',)}\n            </div>\n\n            <div>\n                <b>Contacts</b>:\n                {Object.keys(profile.contacts).map(contact => {\n                    return (\n                        <div key={contact}>\n                            <b>{contact}:</b>\n                            {createReduxFormField(contact,'contacts.' + contact,[],'input')}\n                        </div>\n                    )\n                })}\n            </div>\n            {error && <p className={styles.formErr}> {error} </p>}\n            <button>Save changes</button>\n\n        </form>\n    )\n}\n\nexport default  reduxForm({form: 'editProfile'})(ProfileDataForm);\n\n","import React, {useState} from 'react' ;\nimport styles from './ProfileInfo.module.css';\nimport Preloader from \"../../../common/Preloader\";\nimport ProfileStatus from './ProfileStatus'\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport defAvatar from '../../../assets/img/avatar_default.jpg'\nimport {updateProfileAvatar} from \"../../../pseudoRedux/profilePage-reducer\";\nimport ProfileDataForm from \"./ProfileDataForm\";\nimport Contacts from \"../../Messages/Contacts/Contacts\";\nimport ProfileDataFormRedux from \"./ProfileDataForm\";\n\n\nconst ProfileInfo = ({isOwner, status, updateProfileAvatar, updateProfileStatus, profile,saveProfileChanges}) => {\n\n    let [editMode, setEditMode] = useState(false);\n\n    let activateEditMode = () => {\n        setEditMode(true);\n    }\n\n\n    const onNewAvatarSelected = (e) => {\n        if (e.target.files.length) {\n            let chosenImg = e.target.files[0];\n            updateProfileAvatar(chosenImg);\n        }\n    }\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onSubmit = (formData) => {\n        saveProfileChanges(formData).then(\n            () => {\n                setEditMode(false);\n            }\n        )\n\n    }\n\n    return (\n        (!editMode) ?\n            <div className={styles.user_profile}>\n                <img src={profile.photos.small || defAvatar} className={styles.user_avatar}/>\n                {isOwner &&\n                <>\n                    <label className={styles.upload_msg}>\n                        <input type='file' className={styles.upload_input}\n                               onChange={onNewAvatarSelected}/>\n                        change avatar\n                    </label>\n\n                </>\n                }\n                <ProfileData profile={profile} isOwner={isOwner} activateEditMode={activateEditMode}/>\n            </div>\n            : <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\n    )\n}\n\nconst ProfileData = ({profile,isOwner,activateEditMode}) => {\n\n    return (\n        <div>\n            <div className={styles.fullName}> {profile.fullName}</div>\n            <div>{profile.aboutMe}</div>\n            {profile.lookingForAJob ? <div>Ищу работу</div> : <div>Работа это не моё</div>}\n            <div>{profile.lookingForAJobDescription || 'тут будут навыки'}</div>\n            <ul className={styles.profile_contacts}>\n                {Object.entries(profile.contacts).map(([social, contact]) => {\n                    return <SocialContacts key={social} social={social} contact={contact}/>\n                })}\n            </ul>\n            {isOwner && <button onClick={activateEditMode}>edit Profile</button>}\n        </div>\n\n\n    )\n}\n\nconst SocialContacts = ({social, contact}) => {\n    return <li className={styles.contact_item} key={social}>{social} : {contact} </li>\n}\n\nexport default ProfileInfo;","import React from 'react' ;\nimport styles from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n        <div className={styles.post}>\n            {props.text}\n            <div>\n                <span>like: {props.likeCount}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;\n","import React from 'react' ;\nimport styles from './MyPosts.module.css';\nimport Post from './Post/Post'\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/formValidator\";\nimport {ValidatedElemCreator} from \"../../../common/FormControls\";\n\nlet maxLength30 = maxLengthCreator(30);\nconst ValidatedTextarea = ValidatedElemCreator('textarea')\n\nconst addPostForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={ValidatedTextarea} name='newPostText'\n                       validate={[requiredField,maxLength30]} placeholder='type new post'/>\n            </div>\n            <div>\n                <button> new post</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddPostFormRedux = reduxForm({ form: 'addPostForm' })(addPostForm)\n\nconst MyPosts = (props) => {\n\n    let my_posts_element = props.myPostsData.map ( post => {\n        return (\n            <Post text={post.text} likeCount={post.likeCount} key={post.id}/>\n        )\n    });\n\n\n    return (\n       <div className={styles.posts}>\n           <h3 className={styles.header}>My posts</h3>\n           <div>\n               {my_posts_element}\n           </div>\n           <AddPostFormRedux onSubmit={props.addNewPost} />\n       </div>\n    )\n}\n\n\nexport default MyPosts;","import React from 'react' ;\nimport {addNewPost} from \"../../../pseudoRedux/profilePage-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n\n    return {\n        myPostsData: state.profilePage.myPostsData,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps,{addNewPost})(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react' ;\nimport styles from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n\n    return (\n        <div className={styles.profile}>\n            <ProfileInfo\n                profile={props.profile} status={props.status} updateProfileStatus={props.updateProfileStatus}\n                isOwner={props.isOwner} updateProfileAvatar={props.updateProfileAvatar}\n                saveProfileChanges={props.saveProfileChanges}/>\n            {props.isOwner && <MyPostsContainer />}\n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react' ;\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {\n    getProfileStatus,\n    getUserProfile, saveProfileChanges,\n    updateProfileAvatar,\n    updateProfileStatus\n} from \"../../pseudoRedux/profilePage-reducer\";\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass InnerProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.UserId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                userId = this.props.history.push('/login')\n            }\n        }\n\n\nthis.props.getUserProfile(userId);\nthis.props.getProfileStatus(userId);}\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.UserId !== prevProps.match.params.UserId) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} updateProfileStatus={this.props.updateProfileStatus} status={this.props.status}\n                     isOwner={!this.props.match.params.UserId}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.id,\n        isLogged: state.auth.isLogged,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getProfileStatus, updateProfileStatus,\n        updateProfileAvatar,saveProfileChanges}),\n    withRouter\n    // withAuthRedirect\n)(InnerProfileContainer)"],"sourceRoot":""}